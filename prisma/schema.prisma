// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      String   @default("user")
  teamId    String?
  team      Team?    @relation(fields: [teamId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deals     Deal[]

  @@map("users")
}

model Team {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]

  @@map("teams")
}

model Lead {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deals     Deal[]

  @@map("leads")
}

model DealStage {
  id        String   @id @default(uuid())
  name      String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deals     Deal[]

  @@map("deal_stages")
}

enum DealStatus {
  ACTIVE
  LOST
  WON
}

model Deal {
  id           String    @id @default(uuid())
  title        String
  valueInCents Int
  status       String
  leadId       String
  lead         Lead      @relation(fields: [leadId], references: [id])
  ownerId      String
  owner        User      @relation(fields: [ownerId], references: [id])
  stageId      String
  stage        DealStage @relation(fields: [stageId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("deals")
}
